;GARBAGE.MAC
;860624 ALEX

INCLUDE 8KLISP.DEF

	EXTRN ERR,PR$PC,MSG$PC,PRIN1,MFREE,TRET
	EXTRN GCSYM,HEAP,HEAPTR,SINIT,TEMP,FLAG


;**************;
; MEMORY CHECK ;
;**************;
MEMCHK::
	LD HL,(HEAPTR)
MCHKHL::
	LD BC,SAFETY
	ADD HL,BC
	SBC HL,SP		;< SP ?
	RET C			;YES-RET
;*******************;
; GARBAGE COLLECTOR ;
;*******************;
GC::
	LD A,(GCSYM+2)	;MESSAGE WELCOME?
	OR A
	JR Z,MARKING
	PRINT "GC: "	;YES
MARKING::
	LD BC,(HEAPTR)	;GET LIMIT FOR STACK
	INC B			;SAFETY SPACE 256 BYTES
	XOR A			;CLEAR OVERFLOW FLAG
	LD (FLAG),A
	LD HL,HEAP		;MARK SYMBOLS
	CALL MARK
	LD HL,2			;MARK STACK CONTENTS
	ADD HL,SP
MKSTCK::
	LD DE,(SINIT)	;GET STACK END
	CPDE			;DONE?
	JR Z,CHKOVFL	;YES
	LD E,(HL)
	INC HL
	LD D,(HL)
	INC HL
	PUSH HL			;SAVE STACK INDEX
	CPDE			;FRAME LINK?
	CALL NC,MARKDE	;NO: MARK THE STACK ENTRY
	POP HL
	JR MKSTCK
CHKOVFL::
	LD A,(FLAG)		;CHECK IF THERE WAS A STACK OVERFLOW
	OR A
	JR Z,COMPACT	;OK
	XOR A
	LD (FLAG),A		;ELSE CLEAR FLAG AGAIN
	LD HL,HEAP		;SCAN HEAP FOR MISSING LINKS
MKOVFL::
	LD A,(HL)		;NEXT OBJECT
	RRCA			;CELL?
	JR NC,MO20		;NO
	RRCA			;MARKED?
	JR NC,MO20		;NO - NOT INTERESTING
	PUSH HL			;SAVE HEAP PTR
	FETCH			;CAR IN HL
	RES 1,L			;CLEAR MARK
	BIT 1,(HL)		;CAR MARKED?
	JR NZ,MO10		;YES - NOT INTERESTING
	CALL MARK		;ELSE MARK MISSING LINK
MO10:
	POP HL			;RETRIEVE HEAP PTR
MO20:
	CALL NEXTITEM
	LD DE,(HEAPTR)	;DONE?
	CPDE
	JR NZ,MKOVFL	;NO
COMPACT::
	LD DE,HEAP		;DE SCANS UP
	LD HL,(HEAPTR)	;HL SCANS DOWN
CP10:				;FIND NEXT LOWER MARKED ITEM
	CPDE			;DONE?
	JR Z,ADJAL2		;YES
	DEC HL
	LD BC,4			;DEFAULT SIZE CELL
	LD A,(HL)		;NEXT ITEM BACK
	RRCA			;CELL?
	JR C,CP20		;YES
	RLCA			;RESTORE TAG
	LD C,A			;GET SIZE IN BC
CP20:
	OR A
	SBC HL,BC
	INC HL			;HL ON NEXT ITEM BACK
	BIT 1,(HL)		;MARKED?
	JR Z,CP10		;NO
	CPDE			;DONE?
	JR Z,ADJAL1		;YES: NO FREE SPACE FOR THIS ITEM
	EX DE,HL		;HL SCANS UP, DE ON MARKED ITEM
CP30:				;FIND FREE HOLE OF SIZE >= C
	BIT 1,(HL)		;MARKED?
	JR Z,CP40		;NO
CP35:
	CALL NEXTITEM	;ELSE SKIP MARKED ITEM
	CPDE			;DONE?
	JR NZ,CP30		;NO
	JR ADJAL1		;ELSE GO TO ADJUST
CP40:
	LD (TEMP),HL	;REMEMBER START OF FREE SPACE
CP50:
	CALL NEXTITEM	;SKIP UNMARKED ENTRIES
	ADD A,B
	LD B,A			;ACCUMULATE FREE SPACE IN B
	CP C			;ENOUGH?
	JR NC,FNDHOL	;YES
	CPDE			;MORE FREE SPACE?
	JR Z,ADJAL1		;NO
	BIT 1,(HL)		;NEXT ITEM MARKED?
	JR Z,CP50		;NO
	LD B,0			;ELSE CLEAR ACCU
	JR CP35			;AND TRY AGAIN
FNDHOL::			;FOUND A BIG ENOUGH HOLE
	PUSH DE			;DOWN-PTR
	PUSH BC			;SIZES
	LD HL,(TEMP)	;START OF FREE SPACE
	EX DE,HL		;IN DE, OBJECT TO MOVE IN HL
	LD B,0
	LDIR			;MOVE OBJECT
	POP BC			;GET SIZES
	LD A,B
	SUB C			;EQUAL?
	JR Z,FH10		;YES
	LD C,A
	OR 80H			;INSERT DUMMY NUMBER
	LD (DE),A
	LD L,C
	LD H,0
	ADD HL,DE
	DEC HL			;END OF HOLE
	LD (HL),C
FH10:				;DE ON END OF HOLE
	POP HL			;GET DOWN-PTR INTO HL
	LD A,(TEMP)		;LET EVERYBODY KNOW WHERE THE OBJECT WENT
	LD (HL),A
	INC HL
	LD A,(TEMP+1)
	LD (HL),A
	DEC HL
	JR CP10			;CONTINUE
ADJAL1::
	CALL NEXTITEM	;NO SPACE FOUND FOR THIS ITEM
ADJAL2::			;ADJUST ALL POINTERS
	LD (HEAPTR),HL	;SET NEW HEAP PTR
	EX DE,HL
	LD HL,HEAP		;HL ON HEAP, DE ON LIMIT
AA10:
	CPDE			;REACHED LIMIT?
	JR Z,ADJSTK		;YES
	BIT 1,(HL)		;MARKED?
	JR Z,AA30		;NO: IGNORE
	RES 1,(HL)		;CLEAR MARK
	LD A,(HL)		;CELL?
	RRCA
	JR NC,AA20		;NO
	CALL ADJPTR		;ELSE ADJUST CAR
	LD B,(HL)		;AND CDR
	INC HL
	LD C,(HL)
	INC HL
	LD A,B
	CP D			;CODE ADDRESS, NIL OR BELOW LIMIT?
	JR C,AA10		;YES - NO ADJUSTMENT
	JR NZ,ADJ10
	LD A,C
	CP E
	JR C,AA10
ADJ10:
	PUSH HL			;SAVE PTR
	LD H,B
	LD L,C			;OBJECT IN HL
	LD C,(HL)		;GET NEW ADDRESS
	INC HL
	LD B,(HL)		;IN BC
	POP HL
	DEC HL
	DEC HL
	LD (HL),B
	INC HL
	LD (HL),C
	INC HL
	JR AA10
AA20:
	AND 40H			;SYMBOL?
	JR NZ,AA30		;NO
	PUSH HL			;ELSE ADJUST:
	INC HL
	CALL ADJPTR		;VALUE
	CALL ADJPTR		;FDEF
	CALL ADJPTR		;PLIST
	CALL ADJPTR		;LINK
	POP HL
AA30:
	CALL NEXTITEM
	JR AA10

ADJSTK::
	LD HL,2			;ADJUST STACK CONTENTS
	ADD HL,SP
AS10:
	PUSH DE			;SAVE LIMIT
	LD DE,(SINIT)	;GET STACK END
	CPDE			;DONE?
	JR Z,GCDONE		;YES
	LD E,(HL)		;GET OBJECT
	INC HL
	LD D,(HL)
	INC HL
	CPDE			;FRAME LINK?
	LD B,D
	LD C,E
	POP DE
	CALL NC,ADJPT2	;NO: ADJUST STACK ENTRY
	JR AS10
GCDONE::
	POP DE			;DROP
	LD HL,(HEAPTR)	;CHECK AGAIN
	LD BC,SAFETY+GAIN
	ADD HL,BC
	SBC HL,SP		;< SP ?
	JR NC,NOMEM
	LD A,(GCSYM+2)	;MESSAGE WELCOME?
	OR A
	JR Z,GCRET		;NO
FREMSG::
	CALL MFREE		;CALCULATE FREE SPACE
	LD DE,NIL		;OUT TO CONSOLE
	CALL PRIN1		;PRINT IT
	MSG " Bytes"
GCRET:
	JP TRET

NOMEM:
	ERROR "Mem"

;***********************************************;
; ADJUST POINTER IF POINTING TO VANISHED OBJECT ;
;***********************************************;
ADJPTR::
	LD C,(HL)		;GET OBJECT IN BC
	INC HL
	LD B,(HL)
	INC HL
ADJPT2:
	LD A,B
	CP D			;CODE ADDRESS, NIL OR BELOW LIMIT?
	RET C			;YES
	JR NZ,ADJ
	LD A,C
	CP E
	RET C
ADJ:
	PUSH HL			;SAVE RETURN VALUE
	LD H,B
	LD L,C			;OBJECT IN HL
	LD C,(HL)		;GET NEW ADDRESS
	INC HL
	LD B,(HL)		;IN BC
	POP HL
	DEC HL
	DEC HL
	LD (HL),C
	INC HL
	LD (HL),B
	INC HL
	RET

;******************************;
; ADVANCE TO NEXT ITEM IN HEAP ;
;******************************;
NEXTITEM::
	LD A,(HL)		;OBJECT
	RRCA			;CELL?
	JR NC,NX10		;NO
	INC HL
	INC HL
	INC HL
	INC HL
	LD A,4			;RETURN SIZE
	RET
NX10:
	RLCA			;RESTORE TAG
	AND 7CH			;GET SIZE INFO
	PUSH AF			;SAVE RETURN VALUE
	ADD A,L			;ADD TO HL
	LD L,A
	ADC A,H
	SUB L
	LD H,A
	POP AF			;RETURN SIZE
IF DEBUG
	DEC HL
	CP (HL)
	INC HL
	RET Z
DAME::
	ERROR "gc"
ELSE
	RET
ENDIF

;**********************;
; MARK ONE LISP OBJECT ;
;**********************;
MARKDE::
	EX DE,HL
MARK::
	LD A,H
	CP HIHEAP		;CODE ADDRESS OR NIL?
	RET C			;YES
	LD A,(HL)		;GET TAG
	RRCA			;CELL?
	JR NC,MKATOM	;NO
	RRCA			;ALREADY MARKED?
	RET C			;YES
	LD E,(HL)		;POPLIST
	SET 1,(HL)		;MARK THE CELL
	INC HL
	LD D,(HL)
	INC HL
	LD A,(HL)
	INC HL
	LD L,(HL)
	LD H,A
	PUSH HL			;SAVE CDR
	LD H,B			;CHECK FOR STACK OVERFLOW
	LD L,C			;(CARRY IS CLEAR)
	SBC HL,SP
	JR NC,STKOVR
	EX DE,HL
	CALL MARK		;MARK CAR
MKCDR:
	POP HL
	JR MARK			;TAIL RECURSE ON CDR
STKOVR::
	LD A,1			;SET OVERFLOW FLAG
	LD (FLAG),A
	JR MKCDR		;CONTINUE WITH CDR
MKATOM:
	RRCA			;ALREADY MARKED?
	RET C			;YES
	SET 1,(HL)		;ELSE MARK IT
	AND 20H			;NUMBER?
	RET NZ			;YES
	INC HL			;ELSE MARK THE SYMBOL'S CELLS:
	LD E,(HL)		;VALUE CELL
	INC HL
	LD D,(HL)
	INC HL
	PUSH HL
	CALL MARKDE
	POP HL
	LD E,(HL)		;FUNCTION DEFINITION
	INC HL
	LD D,(HL)
	INC HL
	PUSH HL
	CALL MARKDE
	POP HL
	LD E,(HL)		;PROPERTY LIST
	INC HL
	LD D,(HL)
	INC HL
	PUSH HL
	CALL MARKDE
	POP HL
	FETCH			;MARK NEXT SYMBOL IN CHAIN
	JR MARK

	END
